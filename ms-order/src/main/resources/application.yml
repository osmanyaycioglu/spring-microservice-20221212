app:
  boundedcontext: restdom.restcontext
spring:
  config:
    import: configserver:http://127.0.0.1:8888
  application:
    name: order
  cloud:
    loadbalancer:
      retry:
        enabled: false
        retry-on-all-operations: true
        max-retries-on-same-service-instance: 0
        max-retries-on-next-service-instance: 2
server:
  port: ${APPPORT:10000}
resilience4j:
  retry:
    instances:
      restaurant-retry:
        wait-duration: '1ms'
        max-attempts: 2
        retry-exception-predicate: com.training.inno.ms.msorder.resilience.MyRetryChooser
        result-predicate: com.training.inno.ms.msorder.resilience.MyResultPredicate
      xyz:
        wait-duration: '500ms'
        max-attempts: 4
        result-predicate: com.training.inno.ms.msorder.retry.test.MyTestPredicate
    retry-aspect-order: 1
  circuitbreaker:
    instances:
      restaurant-cb:
        sliding-window-type: count_based
        sliding-window-size: 20
        allow-health-indicator-to-fail: true
        register-health-indicator: true
        failure-rate-threshold: 30
        minimum-number-of-calls: 10
        wait-duration-in-open-state: 10s
        automatic-transition-from-open-to-half-open-enabled: false
        max-wait-duration-in-half-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 10
        slow-call-duration-threshold: 500ms
        slow-call-rate-threshold: 30
    circuit-breaker-aspect-order: 2

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
      show-components: always
  info:
    env:
      enabled: true
info:
  my:
    test:
      info:
        version: '1.0.0'
      app: "app1"
      port: ${server.port}
      pom: @project.version@
